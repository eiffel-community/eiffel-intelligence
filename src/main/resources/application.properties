spring.application.name=eiffel-intelligence
#${project.artifactId}

build.version=@project.version@

# port where Eiffel Intelligence will run
server.port: 8090

# path to files with rules for aggregating objects
rules.path: /ArtifactRules_new.json

# logging levels can be set with the flag below for the top packages
# deactivated by default because Travis will fail due to log file size.
# it is possible to only activate logging for a certain package under 
# these top packages
logging.level.root: OFF
logging.level.org.springframework.web: ERROR
logging.level.com.ericsson.ei: ERROR

# Details for connection to RabbitMQ
rabbitmq.host: localhost
rabbitmq.port: 5672
rabbitmq.user:
rabbitmq.password:
# Valid TLS versions: 'TLSv1.2', 'TLSv1.1', 'TLSv1', 'TLS', 'SSLv3', 'SSLv2', 'SSL'
rabbitmq.tlsVersion:
rabbitmq.exchange.name: ei-poc-4
rabbitmq.domainId: er001-eiffelxxx
rabbitmq.componentName: eiffelintelligence
rabbitmq.consumerName: messageConsumer
rabbitmq.queue.durable:true
rabbitmq.binding.key:#
rabbitmq.waitlist.queue.suffix:waitlist

# the marker to be replaced with an ID from IdentifyRules
mergeidmarker: %IdentifyRules%
# we reuse the same version as we use in our unit tests
spring.mongodb.embedded.version: 3.4.1
# we remove the embedded mongodb in tests since in most of them we set up our own before Spring starts
# and activate it manually in tests where we need the Spring's own embedded mongo DB
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongoAutoConfiguration

# Details for connection to mongoDB
spring.data.mongodb.host: localhost
spring.data.mongodb.port: 27017
spring.data.mongodb.database: eiffel_intelligence
# we cannot have empty username and password property here
# if these properties are empty, remove or comment them
#spring.data.mongodb.username:
#spring.data.mongodb.password:

# session expiration
server.session-timeout: 1200
sessions.collection.name: sessions

# name of the aggregated object for user to prefix each query criteria
# This property will be used as a prefix to each criteria of the
# query. It is replaced dynamically with the name of the object stored, in 
# the data base.
search.query.prefix: object
# name of the aggregated object in the collection
aggregated.object.name: aggregatedObject
# name of the collection where aggregated objects are stored
aggregated.collection.name: aggregated_objects
# time to live value for aggregated objects
aggregated.collection.ttlValue:
# the name of the collection where to store the maping between 
# aggregated objects and id of the events that contributed to them
event_object_map.collection.name: event_object_map
# name of the collection where unprocessed events are stored
waitlist.collection.name: wait_list
# time to live value in DB for unprocessed events
waitlist.collection.ttlValue: 600
# resend information for unprocessed events in wait list
waitlist.initialDelayResend: 2000
waitlist.fixedRateResend: 15000
# name of the collection where subscriptions are stored
subscription.collection.name: subscription
# name of the collection where we store pair of subscription:aggregated 
# object where notification has been done and should not be repeated
subscription.collection.repeatFlagHandlerName: subscription_repeat_handler

# Need to be set to True to use Test Rules page in EI-Frontend.
# This is when you want to define new aggregation rules and test it
# on an existing or artificially created set of events.
testaggregated.enabled: false

# threading settings
threads.corePoolSize: 100
threads.queueCapacity: 5000
threads.maxPoolSize: 150
# name of the collection where missed notifications are stored
missedNotificationCollectionName: Notification
# name of the database where missed notifications are stored
missedNotificationDataBaseName: MissedNotification
# email sender settings for email notifications
email.sender: noreply@ericsson.com
email.subject: Email Subscription Notification

# number of retries if a notification fail
notification.failAttempt: 3
# time to live in database for missed notifications
notification.ttl.value: 600

# email server settings to route email notifications
# through
spring.mail.host:
spring.mail.port:
spring.mail.username:
spring.mail.password:
spring.mail.properties.mail.smtp.auth: false
spring.mail.properties.mail.smtp.starttls.enable: false

# end point for downstream and upstream search in
# event repository
er.url:
#er.url: http://localhost:8080/search/
# settings for ldap server if ldap authentication is needed
ldap.enabled: false
ldap.url:
ldap.base.dn:
ldap.username:
# For security reasons and to avoid authorization problems this
# password should be encoded. It will be decoded in EndpointSecurity.java.
# Password needs to be encoded with base64.
ldap.password:
ldap.user.filter:
