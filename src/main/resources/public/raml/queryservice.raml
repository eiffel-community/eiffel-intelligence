
  
    /aggregatedObject:
      get:
        queryParameters:
          id: 
            displayName: id
            type: string
            description: Id of the aggregatedObject
            example: 6acc3c87-75e0-4b6d-88f5-b1a5d4e62b44
            required: true
        responses:
          200:        
            body:
              application/json:
                 schema: stringServiceResponse
    /missedNotifications:
      get:
        description: List the missed notification based on the subscriptionName in the query parameter.
        queryParameters:
          subscriptionName:
            displayName: subscriptionName
            type: string
            description: SubscriptionName of the Missed Notification
            example: Subscription_1
            required: true
        responses:
          200:
            body:
              application/json:
                schema: stringServiceResponse
    /free:
      post:
        description: The REST POST method is used to query Aggregated Objects with the
                     criterias requested, which are present in the request body of the
                     request URL.
        queryParameters:
          query:
            displayName: query
            type: string
            description: Query to MongoDB
            example: query={"criteria":{"testCaseExecutions.testCase.verdict":"PASSED","testCaseExecutions.testCase.id":"TC5"},"options":{"id":"6acc3c87-75e0-4b6d-88f5-b1a5d4e62b43"}}
            required: true
        responses:
          200:
            body:
              application/json:
                schema: stringServiceResponse
      get:
        description: The REST GET method is used to query Aggregated Objects with the
                     criterias requested, which are present as query parameters in the request
                     URL.
        queryParameters:
          request:
            displayName: request
            type: string
            description: Query to MongoDB
            example: request=testCaseExecutions.testCase.verdict:PASSED
            required: true
        responses:
          200:
            body:
              application/json:
                schema: stringServiceResponse